#  ______     __  __     __  __     ______     ______    
# /\  ___\   /\ \/ /    /\ \_\ \   /\  ___\   /\  == \   
# \ \___  \  \ \  _--.  \ \____ \  \ \___  \  \ \  __<   
#  \/\_____\  \ \_\ \_\  \/\_____\  \/\_____\  \ \_____\
#   \/_____/   \/_/\/_/   \/_____/   \/_____/   \/_____/
#   
#                    AGPL-3.0 license

import utils
import os
from selfcord import Bot, Context, Extender

class Ext(Extender, name="Loader", description=utils.Langs.getcurrent()['loader']['description']):
    def __init__(self, bot: Bot) -> None:
        self.bot: Bot = bot
        self.langpack = utils.Langs.getcurrent().get('loader')
        
    @Extender.cmd(
        description=utils.Langs.getcurrent()['loader']['loadExt']['description'],
        aliases=["le", "loadcog", "loadmodule", "lc", "lm"]
    )
    async def loadExt(self, ctx: Context, url: str = None):
        if url:
            await utils.answer(ctx, self.langpack['loadExt']['wait'].format(url))
            await self.bot.load_extension(url=url, dir="cogs/")
            await utils.answer(ctx, self.langpack['loadExt']['done'].format(url))
        else:
            await utils.answer(ctx, utils.Langs.getcurrent()['argRequired'].format('URL'))
            
    @Extender.cmd(
        description=utils.Langs.getcurrent()['loader']['reloadExt']['description'],
        aliases=["rl", "restartcog", "rsc", "reloadcog", "rlm"]
    )
    async def reloadExt(self, ctx: Context):
        cogs = os.listdir("cogs/")
        msg = ''
        await utils.answer(ctx, self.langpack['reloadExt']['wait'].format(len(cogs)))
        for cog in cogs:
            if cog.endswith(".py"):
                await self.bot.load_extension(f"cogs.{cog[:-3]}")
                msg += self.langpack['reloadExt']['format'].format(cog)
        await utils.answer(ctx, self.langpack['reloadExt']['title'].format(len(cogs)))